01.10.2023 ------------------------------------------------------------------------------------------------------------

(30.09.2023)
MinesweeperModel
- Класс GameEventMinesweeperVariableParams отвечает за несколько разных событий. Разделить. Это повлияет на:
-- GameEventMinesweeperVariableParams.
-- AllMinesweeperObjects.

(30.09.2023)
MinesweeperViewControlsJfx
- Класс GameEventMinesweeperVariableParams отвечает за несколько разных событий. Разделить. Это повлияет на:
-- MinesweeperVariableSettings.

(30.09.2023)
SokobanModel
- Класс GameEventSokobanVariableParams отвечает за несколько разных событий. Разделить. Это повлияет на:
-- SokobanModel.
-- GameEventSokobanVariableParams.

(30.09.2023)
SokobanViewControlsJfx
- Класс GameEventSokobanVariableParams отвечает за несколько разных событий. Разделить. Это повлияет на:
-- SokobanVariableSettings.


02.10.2023 ------------------------------------------------------------------------------------------------------------

(30.09.2023)
Архитектура
TileGameEngineJfx
- Подготовить модуль для унификации классов потомков ViewJfx, отвечающих за вывод целых значений
  (постоянных и переменных параметров статистики партии) и их потомков в связи с их похожестью:
-- MinesweeperPersistentSettings, MinesweeperVariableSettings,
-- SokobanPersistentSettings, SokobanVariableSettings.

(30.09.2023)
Архитектура
MinesweeperViewControlsJfx
- Классы MinesweeperPersistentSettings, MinesweeperVariableSettings и их потомки очень похожи.
-- Их нужно унифицировать и общее вывести в новый родительский класс.

(30.09.2023)
Архитектура
SokobanViewControlsJfx
- SokobanPersistentSettings, SokobanVariableSettings и их потомки очень похожи.
-- Их нужно унифицировать и общее вывести в новый родительский класс.


05.10.2023 ------------------------------------------------------------------------------------------------------------

(30.09.2023)
Архитектура
TileGameEngineJfx
- Подготовить модуль для унификации классов потомков ViewJfx, отвечающих за вывод целых значений
  (постоянных и переменных параметров статистики партии) и их потомков в связи с их работой более чем с одним полем вывода:
-- MinesweeperPersistentSettings, MinesweeperVariableSettings,
-- SokobanPersistentSettings, SokobanVariableSettings.

(30.09.2023) В коммите есть попытка реализации в BaseModel. Неуспешная. Будет удалена. Отказ от реализации.
Архитектура
BaseModel и наследники (MinesweeperModel и SokobanModel)
- Класс GameEventROTextFields пустой (в BaseModel) и его наследники GameEventMinesweeper... (в MinesweeperModel
  не могут при наследовании иметь независимую static переменную.
  Эта задача похоже связана с задачей от 30.09.2023 "Подготовить модуль для унификации классов потомков ViewJfx,
  отвечающих за вывод целых значений (постоянных и переменных параметров статистики партии) и их потомков в связи с их
  работой более чем с одним полем вывода".
  Нужно найти более правильное архитектурное решение. Вероятно оно будет связано с введением в базовый класс списка
  параметров для вывода в выборку, где элементом списка было-бы: заголовок, тип, значение.
-- Причем сейчас тип только int, а ведь возможно там и другой тип может быть, например текст или Enum.
-- Даже при этом универсальном виде заголовок и тип - значения всегда одинаковые в списке для отдельно взятого типа
   сообщения.

(05.10.2023)
Архитектура
MinesweeperModel и MinesweeperViewControlsJfx
- Удалить константы из кода функций Minesweeper...Settings... и перенести их в классы:
-- либо GameEventMinesweeper...,
-- либо преобразовать в другое архитектурное решение (см. следующую задачу).

(30.09.2023) Отказ от реализации.
Архитектура
MinesweeperViewControlsJfx
- Классы MinesweeperPersistentSettings, MinesweeperVariableSettings и их потомки очень похожи.
-- После первой унификации учесть не только один параметр, а унифицировать для более чем одного параметра.

(05.10.2023)
Архитектура
SokobanModel и SokobanViewControlsJfx
- Удалить константы из кода функций Sokoban...Settings... и перенести их в классы:
-- либо GameEventSokoban...,
-- либо преобразовать в другое архитектурное решение (см. следующую задачу).

(30.09.2023) Отказ от реализации.
Архитектура
SokobanViewControlsJfx
- SokobanPersistentSettings, SokobanVariableSettings и их потомки очень похожи.
-- После первой унификации учесть не только один параметр, а унифицировать для более чем одного параметра.


07.10.2023 ------------------------------------------------------------------------------------------------------------

(27.09.2023)
BaseModel
- В модели очередь сообщений сначала очень упростить в реализации.
