@startuml
'https://plantuml.com/class-diagram

'!theme plain
top to bottom direction
skinparam linetype ortho

class MinesweeperTile extends Tile {
  + MinesweeperTile(int, int, boolean)
  + isOpen( ): boolean
  + getCountOfMineNeighbors( ): int
  + isFlag( ): boolean
  + isMine( ): boolean

  - countOfMineNeighbors: int
  - isOpen: boolean
  - isMine: boolean
  - neighbors: Set< MinesweeperTile>
  - isFlag: boolean

  ~ isMineInPackageMode( ): boolean
  ~ open( ): void
  ~ inverseFlag( ): void
  ~ getNeighborTiles( ): Set< MinesweeperTile>
  ~ setNeighborTiles( Set< MinesweeperTile>): void
}

class AllMinesweeperObjects {
  - width: int final
  - height: int final
  - countOfMines: int final

  - countOfFlags: int
  - countOfClosedTiles: int
  - minesweeperTiles: MinesweeperTile[ ][ ]

  + AllMinesweeperObjects( int, int, MinesweeperTile[ ][ ], int):
  + inverseFlag( MinesweeperTile): void
  + open( MinesweeperTile): GameStatus

  - openRecursive( MinesweeperTile): GameStatus
  - defineNeighbors( MinesweeperTile): void
}
AllMinesweeperObjects -> MinesweeperTile

class MinesweeperModel extends BaseModel {
  ~ allMinesweeperObjects: AllMinesweeperObjects

  + createNewGame( int, int, int): void
  + getMinesweeperTileIsOpen( int, int): boolean
  + getCountOfMineNeighbors( int, int): int
  + getMinesweeperTileIsFlag( int, int): boolean
  + getMinesweeperTileIsMine( int, int): boolean
  + open( int, int): void
  + inverseFlag( int, int): void
}
MinesweeperModel -> AllMinesweeperObjects

class LevelGenerator {
  + LevelGenerator( ):
  + getLevel( int, int, int): AllMinesweeperObjects
}


@enduml